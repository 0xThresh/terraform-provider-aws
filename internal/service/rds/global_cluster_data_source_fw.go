// Code generated by tools/tfsdk2fw/main.go. Manual editing is required.

package rds

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
)

// @FrameworkDataSource("aws_rds_global_cluster", name="Global Cluster")
func newDataSourceGlobalCluster(context.Context) (datasource.DataSourceWithConfigure, error) {
	return &dataSourceGlobalCluster{}, nil
}

type dataSourceGlobalCluster struct {
	framework.DataSourceWithConfigure
}

// Metadata should return the full name of the data source, such as
// examplecloud_thing.
func (d *dataSourceGlobalCluster) Metadata(_ context.Context, request datasource.MetadataRequest, response *datasource.MetadataResponse) {
	response.TypeName = "aws_rds_global_cluster"
}

// Schema returns the schema for this data source.
func (d *dataSourceGlobalCluster) Schema(ctx context.Context, request datasource.SchemaRequest, response *datasource.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"arn": schema.StringAttribute{
				Computed: true,
			},
			"database_name": schema.StringAttribute{
				Computed: true,
			},
			"deletion_protection": schema.BoolAttribute{
				Computed: true,
			},
			"engine": schema.StringAttribute{
				Computed: true,
			},
			"engine_version": schema.StringAttribute{
				Computed: true,
			},
			"force_destroy": schema.BoolAttribute{
				Computed: true,
			},
			"identifier": schema.StringAttribute{
				Required: true,
			},
			"members": schema.SetAttribute{
				ElementType: types.ObjectType{
					AttrTypes: map[string]attr.Type{
						"db_cluster_arn": types.StringType,
						"is_writer":      types.BoolType,
					},
				},
				Computed: true,
			},
			"resource_id": schema.StringAttribute{
				Computed: true,
			},
			"region": schema.StringAttribute{
				Optional:    true,
				Computed:    true,
				Description: "Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).",
			},
			"source_db_cluster_identifier": schema.StringAttribute{
				Computed: true,
			},
			"storage_encrypted": schema.BoolAttribute{
				Computed: true,
			},
		},
	}
}

// Read is called when the provider must read data source values in order to update state.
// Config values should be read from the ReadRequest and new state values set on the ReadResponse.
func (d *dataSourceGlobalCluster) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data dataSourceGlobalClusterData

	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}

type dataSourceGlobalClusterData struct {
	framework.WithRegionModel
	ARN                       types.String `tfsdk:"arn"`
	DatabaseName              types.String `tfsdk:"database_name"`
	DeletionProtection        types.Bool   `tfsdk:"deletion_protection"`
	Engine                    types.String `tfsdk:"engine"`
	EngineVersion             types.String `tfsdk:"engine_version"`
	ForceDestroy              types.Bool   `tfsdk:"force_destroy"`
	GlobalClusterIdentifier   types.String `tfsdk:"identifier"`
	GlobalClusterMembers      types.Set    `tfsdk:"members"`
	GlobalClusterResourceID   types.String `tfsdk:"esource_id"`
	Region                    types.String `tfsdk:"region"`
	SourceDbClusterIdentifier types.String `tfsdk:"source_db_cluster_identifier"`
	StorageEncrypted          types.Bool   `tfsdk:"storage_encrypted"`
}
